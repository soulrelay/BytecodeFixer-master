// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        maven {
            url uri('./repo')
        }
        maven {
            url 'http://artifactory.intra.xiaojukeji.com/artifactory/public/'
        }

        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.llew.bytecode.fix.gradle:plugin:2.0.30'

        //classpath 'com.novoda:bintray-release:0.3.4'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {
            url 'http://artifactory.intra.xiaojukeji.com/artifactory/public/'
        }

        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

/**
 * 配置阶段开始前的回调
 */
this.beforeEvaluate {
    //需要研究下
}
/**
 * 配置阶段完成以后的回调
 */
this.afterEvaluate {
    println '配置阶段执行完毕...'
}
/**
 * gradle执行完毕后的回调监听
 */
this.gradle.buildFinished {
    println '执行阶段执行完毕...'
}

this.gradle.beforeProject {}

this.gradle.afterProject {}

this.getProjects()

def getProjects() {
    println '-------------------'
    println 'Root Project'
    println '-------------------'
//    this.getAllprojects().eachWithIndex { Project project, int index ->
//        if(index == 0){
//            println "Root project ':${project.name}'"
//        }else{
//            println "+--- project ':${project.name}'"
//        }
//    }
    this.getSubprojects().eachWithIndex { Project project, int index ->
        println "+--- project ':${project.name}'"
    }
}

this.getRootPro()

def getRootPro() {
    def name = this.getRootProject().name
    println "the root project name is: ${name}"
}

